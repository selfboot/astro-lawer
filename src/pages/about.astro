---
import Base from "@/layouts/Base.astro";
import { markdownify } from "@/lib/utils/textConverter";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { getEntry, render } from "astro:content";

const entry = (await getEntry("about", "-index")) as CollectionEntry<"about">;
const { Content } = await render(entry);
const { title, meta_title, image, what_i_do } = entry.data;
---

<Base title={title} meta_title={meta_title} image={image}>
  <section class="section">
    <div class="container">
      <div class="row md:gx-4">
        <div class="sm:col-5 md:col-4">
          {
            image && (
              <div class="img-cover mb-8">
                <Image
                  src={image}
                  width={295}
                  height={395}
                  alt={title}
                  class="rounded-lg w-full"
                />
              </div>
            )
          }
        </div>
        <div class="sm:col-7 md:col-8">
          <h1 set:html={markdownify(title)} class="h3 mb-8" />

          <div class="content">
            <Content />
          </div>
          <a href="/contact" class="btn btn-primary text-white py-2"
            >联系我</a
          >
        </div>
      </div>
    </div>
  </section>

  <section class="section pt-0">
    <div class="container">
      <h3 class="page-heading mb-20">{what_i_do.title}</h3>
      <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
        {
          what_i_do.items.map((item: any) => (
            <div class="h-full">
              <div class="bg-theme-light dark:bg-darkmode-theme-light p-4 rounded-lg h-full shadow-sm hover:shadow-md transition-shadow duration-300">
                <div class="flex items-center mb-3">
                  {item.avatar ? (
                    <Image 
                      src={item.avatar} 
                      width={60} 
                      height={60} 
                      alt={`${item.client_name || '客户'} 头像`} 
                      class="rounded-full mr-4"
                    />
                  ) : (
                    <div class="w-[60px] h-[60px] bg-primary/20 rounded-full flex items-center justify-center mr-4">
                      <span class="text-primary text-xl font-bold">
                        {(item.client_name || '客户').charAt(0)}
                      </span>
                    </div>
                  )}
                  <div>
                    <h4 class="text-dark dark:text-white font-semibold">{item.client_name || '客户'}</h4>
                  </div>
                </div>
                <div class="text-yellow-400 mb-2 flex">
                  {'★'.repeat(item.rating || 5)}
                </div>
                <p class="text-left text-text-dark dark:text-text-dark-dark">{item.description}</p>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>
</Base>
