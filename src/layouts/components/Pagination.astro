---
const { section, currentPage, totalPages } = Astro.props;

const indexPageLink = currentPage === 2;
const hasPrevPage = currentPage > 1;
const hasNextPage = totalPages > currentPage;

// 智能分页逻辑：最多显示7个页码
const maxVisiblePages = 7;
let pageList = [];

if (totalPages <= maxVisiblePages) {
  // 如果总页数小于等于最大显示页数，显示所有页码
  for (let i = 1; i <= totalPages; i++) {
    pageList.push(i);
  }
} else {
  // 智能显示页码
  const halfVisible = Math.floor(maxVisiblePages / 2);
  let startPage = Math.max(1, currentPage - halfVisible);
  let endPage = Math.min(totalPages, currentPage + halfVisible);
  
  // 调整显示范围，确保显示足够的页码
  if (endPage - startPage + 1 < maxVisiblePages) {
    if (startPage === 1) {
      endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);
    } else {
      startPage = Math.max(1, endPage - maxVisiblePages + 1);
    }
  }

  // 添加首页
  if (startPage > 1) {
    pageList.push(1);
    if (startPage > 2) {
      pageList.push('...');
    }
  }

  // 添加中间页码
  for (let i = startPage; i <= endPage; i++) {
    pageList.push(i);
  }

  // 添加末页
  if (endPage < totalPages) {
    if (endPage < totalPages - 1) {
      pageList.push('...');
    }
    pageList.push(totalPages);
  }
}
---

{
  totalPages > 1 && (
    <nav class="mb-8 flex justify-center items-center gap-3 text-center" aria-label="Pagination">
      {/* previous */}
      {hasPrevPage ? (
        <a
          href={
            indexPageLink
              ? `${section ? "/" + section : ""}/posts`
              : `${section ? "/" + section : ""}/page/${currentPage - 1}`
          }
          class="border border-primary hover:bg-primary hover:text-white rounded-lg h-12 w-12 leading-[46px] font-semibold text-dark flex items-center justify-center transition duration-200 hover:shadow-md"
        >
          <span class="sr-only">上一页</span>
          <svg
            class="h-5 w-5"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 20 20"
            fill="currentColor"
            aria-hidden="true"
          >
            <path
              fill-rule="evenodd"
              d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"
              clip-rule="evenodd"
            />
          </svg>
        </a>
      ) : (
        <span class="border border-gray-300 bg-gray-100 opacity-50 rounded-lg h-12 w-12 leading-[46px] font-semibold text-gray-400 flex items-center justify-center pointer-events-none">
          <span class="sr-only">上一页</span>
          <svg
            class="h-5 w-5"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 20 20"
            fill="currentColor"
            aria-hidden="true"
          >
            <path
              fill-rule="evenodd"
              d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"
              clip-rule="evenodd"
            />
          </svg>
        </span>
      )}

      {/* page index */}
      {pageList.map((pagination, i) =>
        pagination === '...' ? (
          <span
            key={i}
            class="text-gray-500 font-semibold px-2 py-2 select-none"
          >
            ...
          </span>
        ) : pagination === currentPage ? (
          <span
            key={i}
            aria-current="page"
            class="border border-primary bg-primary rounded-lg h-12 w-12 leading-[46px] font-semibold text-white shadow-md"
          >
            {pagination}
          </span>
        ) : (
          <a
            key={i}
            href={
              pagination === 1
                ? `${section ? "/" + section : ""}/posts`
                : `${section ? "/" + section : ""}/page/${pagination}`
            }
            aria-current="page"
            class="border border-primary hover:bg-primary hover:text-white rounded-lg h-12 w-12 leading-[46px] font-semibold text-dark flex items-center justify-center transition duration-200 hover:shadow-md"
          >
            {pagination}
          </a>
        )
      )}

      {/* next page */}
      {hasNextPage ? (
        <a
          href={`${section ? "/" + section : ""}/page/${currentPage + 1}`}
          class="border border-primary hover:bg-primary hover:text-white rounded-lg h-12 w-12 leading-[46px] font-semibold text-dark flex items-center justify-center transition duration-200 hover:shadow-md"
        >
          <span class="sr-only">下一页</span>
          <svg
            class="h-5 w-5"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 20 20"
            fill="currentColor"
            aria-hidden="true"
          >
            <path
              fill-rule="evenodd"
              d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
              clip-rule="evenodd"
            />
          </svg>
        </a>
      ) : (
        <span class="border border-gray-300 bg-gray-100 opacity-50 rounded-lg h-12 w-12 leading-[46px] font-semibold text-gray-400 flex items-center justify-center pointer-events-none">
          <span class="sr-only">下一页</span>
          <svg
            class="h-5 w-5"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 20 20"
            fill="currentColor"
            aria-hidden="true"
          >
            <path
              fill-rule="evenodd"
              d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
              clip-rule="evenodd"
            />
          </svg>
        </span>
      )}
    </nav>
  )
}
